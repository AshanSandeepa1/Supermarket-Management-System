<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>